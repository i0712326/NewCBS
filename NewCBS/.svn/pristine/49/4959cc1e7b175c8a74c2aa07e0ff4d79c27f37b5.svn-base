package bcel.cardcenter.cbs.carofat.reconcile.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.Map;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.interceptor.SessionAware;

import bcel.cardcenter.cbs.carofat.entity.CupTxn;
import bcel.cardcenter.cbs.carofat.utility.CupTxnUtil;
import bcel.cardcenter.cbs.utility.Utility;
import bcel.cardcenter.cbs.utility.report.CupTxnReportExportion;
import bcel.cardcenter.cbs.utility.report.Parameter;
import bcel.cardcenter.cbs.utility.report.Report;
import bcel.cardcenter.cbs.utility.report.ReportExportion;

import com.opensymphony.xwork2.ActionSupport;
import java.util.List;
public class CupTxnHistoryAction extends ActionSupport implements SessionAware{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Date date;
	private String option;
	// response
	private String response;
	private String message;
	
	// business logic
	private CupTxnUtil cupTxnUtil;
	
	// output list
	private List<CupTxn> cups;
	private int number;
	private double amount;
	
	// Session Object
	private Map<String, Object> session;
	@Override
	public void setSession(Map<String, Object> session) {
		this.session = session;
	}
	public String getResponse() {
		return response;
	}
	public void setResponse(String response) {
		this.response = response;
	}
	public String getMessage() {
		return message;
	}
	public void setMessage(String message) {
		this.message = message;
	}
	public void setDate(Date date){
		this.date = date;
	}
	public Date getDate(){
		return this.date;
	}
	public void setOption(String option){
		this.option = option;
	}
	public String getOption(){
		return this.option;
	}
	public void setCupTxnUtil(CupTxnUtil cupTxnUtil){
		this.cupTxnUtil=cupTxnUtil;
	}
	// output
	public String getReport(){
		try{
			java.sql.Date sqlDate = new java.sql.Date(date.getTime());
			cups = cupTxnUtil.getTxnByDateOption(sqlDate, option);
			session.put("cups", cups);
			setCups(cups);
			setResponse(SUCCESS);
			setAmount(getSum());
			setNumber(getCups().size());
			return SUCCESS;
		}
		catch(Exception ex){
			setResponse(ERROR);
			setResponse(ex.getMessage());
			return ERROR;
		}
	}
	public List<CupTxn> getCups() {
		return cups;
	}
	public void setCups(List<CupTxn> cups) {
		this.cups = cups;
	}
	public double getAmount() {
		return amount;
	}
	public void setAmount(double amount) {
		this.amount = amount;
	}
	public int getNumber() {
		return number;
	}
	public void setNumber(int number) {
		this.number = number;
	}
	
	private double getSum(){
		double sum = 0;
		for(CupTxn cup : cups){
			sum+=cup.getAmount();
		}
		return sum;
	}
	
	// view
	@SuppressWarnings("unchecked")
	public String view(){
		try{
			List<CupTxn> cups = (List<CupTxn>) session.get("cups");
			setCups(cups);
			setResponse(SUCCESS);
			return SUCCESS;
		}
		catch(Exception ex){
			setResponse(ERROR);
			setMessage(ex.getMessage());
			return ERROR;
		}
	}
	
	// download
	private InputStream fileInputStream;
	private String contentDisposition;
	private Long contentLength;
	private static String template = "cupTxnReport.jrxml";
	private Parameter param;
	private ReportExportion reportExportion;
	
	public InputStream getFileInputStream() {
		return fileInputStream;
	}
	public String getContentDisposition() {
		return contentDisposition;
	}
	public void setContentDisposition(String contentDisposition) {
		this.contentDisposition = contentDisposition;
	}
	public Long getContentLength() {
		return contentLength;
	}
	public void setContentLength(Long contentLength) {
		this.contentLength = contentLength;
	}
	public Parameter getParam() {
		return param;
	}
	public void setParam(Parameter param) {
		this.param = param;
	}
	@SuppressWarnings("unchecked")
	public String download() throws Exception{
		List<CupTxn> cupTxns = (List<CupTxn>) session.get("cups");
		String conPath = ServletActionContext.getServletContext().getRealPath("output/cupTxn");
		String path = ServletActionContext.getServletContext().getRealPath("format_report");
		String formatPath =path+"/"+template;
		String format = param.getFormat();
		String fileName = "CUP-" +Utility.date2Str(param.getImportDate())+"-"+option+"."+format;
		String destPath = conPath + "/" + fileName;
		getParam().setFormatPath(formatPath);
		getParam().setDestPath(destPath);
		getParam().setType(getOption());
		reportExportion = new CupTxnReportExportion();
		reportExportion.setParam(param);
		List<Report> reports = toReportList(cupTxns);
		reportExportion.setReports(reports);
		if(reportExportion.export()){
			File file = new File(destPath);
			fileInputStream = new FileInputStream(file);
			this.setContentDisposition("filename=\""+ fileName +"\"");
			this.setContentLength(file.length());	
			return SUCCESS;
		}
		setResponse(ERROR);
		setMessage("File Download Failed.");
		return ERROR;
	}
	
	private List<Report> toReportList(List<CupTxn> cups){
		List<Report> reports = new ArrayList<Report>();
		for(CupTxn cup : cups){
			Report report = cup;
			reports.add(report);
		}
		return reports;
	}
}
